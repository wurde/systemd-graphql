"""
Custom scalar Date type.
"""
scalar Date

"""
Custom scalar JSON type.
"""
scalar JSON

"""
All unit types.
"""
enum UnitType {
  SERVICE
  SOCKET
  DEVICE
  MOUNT
  AUTOMOUNT
  SWAP
  TARGET
  PATH
  TIMER
  SLICE
  SCOPE
}

"""
All service unit sub-types.
"""
enum ServiceType {
  SIMPLE
  FORKING
  ONESHOT
  NOTIFY
  DBUS
  IDLE
}

"""
All journal output types.
"""
enum JournalOutputType {
  SHORT
  SHORT_FULL
  SHORT_ISO
  SHORT_ISO_PRECISE
  SHORT_ISO_MONOTONIC
  SHORT_ISO_UNIX
  VERBOSE
  EXPORT
  JSON
  JSON_PRETTY
  JSON_SSE
  CAT
}

"""
The root Query type.
"""
type Query {
  now: Date!
  """
  Welcome message.
  """
  hi(message: String = "Hi"): String!
  """
  General information.
  """
  info: String!
  """
  Version of systemd.
  """
  version: String!
  """
  Checks whether the system is operational.
  """
  isSystemRunning: String!
  """
  Show terse runtime status information about a unit.
  """
  unitStatus(pattern: String!): UnitStatus!
  """
  Show terse runtime status information about a user.
  """
  userStatus(uid: Int, name: String): JSON
  """
  Return the default target to boot into. This returns the target unit name default.target is aliased (symlinked) to.
  """
  getDefault: String!
  """
  Check if any specified unit is active. Return exit code 0 if any unit is active, or non-zero otherwise.
  """
  isActive(pattern: String!): Int!
  """
  Check if any specified unit is failed. Return exit code 0 if any unit is failed, or non-zero otherwise.
  """
  isFailed(pattern: String!): Int!
  """
  Checks whether any of the specified unit files are enabled. Return exit code 0 if any unit is enabled, or non-zero otherwise.
  """
  isEnabled(pattern: String!): Int!
  """
  List current sessions.
  """
  sessions: [JSON!]!
  """
  List currently logged in users.
  """
  users: [JSON!]!
  """
  List units that systemd currently has in memory.
  """
  units: [Unit!]!
  """
  List services that systemd currently has in memory.
  """
  services: [Unit!]!
  """
  List sockets that systemd currently has in memory.
  """
  sockets: [Unit!]!
  """
  List devices that systemd currently has in memory.
  """
  devices: [Unit!]!
  """
  List mounts that systemd currently has in memory.
  """
  mounts: [Unit!]!
  """
  List automounts that systemd currently has in memory.
  """
  automounts: [Unit!]!
  """
  List swaps that systemd currently has in memory.
  """
  swaps: [Unit!]!
  """
  List targets that systemd currently has in memory.
  """
  targets: [Unit!]!
  """
  List paths that systemd currently has in memory.
  """
  paths: [Unit!]!
  """
  List timers that systemd currently has in memory.
  """
  timers: [Unit!]!
  """
  List slices that systemd currently has in memory.
  """
  slices: [Unit!]!
  """
  List scopes that systemd currently has in memory.
  """
  scopes: [Unit!]!
  """
  List all running units ordered by the time they took to initialize.
  """
  blame: [Unit!]!
  """
  Query the systemd journal.
  """
  journal(unit: String, since: Date, lines: Int, output: JournalOutputType): [String!]!
}

"""
The root Mutation type.
"""
type Mutation {
  """
  Set the default target to boot into. This sets (symlinks) the default.target alias to the given target unit. Returns the exit code of the process.
  """
  setDefault(name: String!): Int!
  """
  Enable one or more units. Returns the exit code of the process.
  """
  enable(pattern: String!): Int!
  """
  Reenable one or more units. Returns the exit code of the process.
  """
  reenable(pattern: String!): Int!
  """
  Disables one or more units. Returns the exit code of the process.
  """
  disable(pattern: String!): Int!
  """
  Mask one or more units. Returns the exit code of the process.
  """
  mask(pattern: String!): Int!
  """
  Unmask one or more units. This will undo the effect of mask. Returns the exit code of the process.
  """
  unmask(pattern: String!): Int!
  """
  Reset the enable/disable status one or more unit files. Returns the exit code of the process.
  """
  preset(pattern: String!): Int!
  """
  Resets all installed unit files to the defaults configured in the preset policy file. Returns the exit code of the process.
  """
  presetAll: Int!
  """
  Revert one or more unit files to their vendor versions. Returns the exit code of the process.
  """
  revert(pattern: String!): Int!
  """
  Link a unit file that is not in the unit file search paths into the unit file search path. Returns the exit code of the process.
  """
  link(path: String!): Int!
  """
  Start (activate) one or more units. Returns the exit code of the process.
  """
  start(pattern: String!): Int!
  """
  Stop (deactivate) one or more units. Returns the exit code of the process.
  """
  stop(pattern: String!): Int!
  """
  Reload configuration for one or more units. Returns the exit code of the process.
  """
  reload(pattern: String!): Int!
  """
  Stop then start one or more units. If the units are not running yet, they will be started. Returns the exit code of the process.
  """
  restart(pattern: String!): Int!
  """
  Stop then start one or more units. This does nothing if units are not running. Returns the exit code of the process.
  """
  tryRestart(pattern: String!): Int!
  """
  Reload one or more units if they support it. If not, stop and then start them instead. If the units are not running yet, they will be started. Returns the exit code of the process.
  """
  reloadOrRestart(pattern: String!): Int!
  """
  Reload one or more units if they support it. If not, stop and then start them instead. This does nothing if units are not running. Returns the exit code of the process.
  """
  tryReloadOrRestart(pattern: String!): Int!
  """
  Shut down and power-off the system. Returns the exit code of the process.
  """
  poweroff: Int!
  """
  Shut down and halt the system. Returns the exit code of the process.
  """
  halt: Int!
  """
  Shut down and reboot the system. Returns the exit code of the process.
  """
  reboot: Int!
  """
  Suspend the system. Returns the exit code of the process.
  """
  suspend: Int!
  """
  Hibernate the system. Returns the exit code of the process.
  """
  hibernate: Int!
  """
  Hibernate and suspend the system. Returns the exit code of the process.
  """
  hybridSleep: Int!
  """
  Reload the systemd manager configuration. This will rerun all generators, reload all unit files, and recreate the entire dependency tree. While the daemon is being reloaded, all sockets systemd listens on behalf of user configuration will stay accessible. Returns the exit code of the process.
  """
  daemonReload: Int!
  """
  Add a Unit. This does not enable or start the unit. Returns true if the unit is added, false otherwise.
  """
  addUnit(name: String!, content: String!): Boolean!
  """
  Edit a Unit. This does not enable or start the unit. Returns true if the unit is added, false otherwise.
  """
  editUnit(name: String!, content: String!): Boolean!
  """
  Remove a Unit. This does not stop or disable the unit. Returns true if the unit is removed, false otherwise.
  """
  removeUnit(name: String!): Boolean!
  """
  Activates the screen lock on a session. Returns the exit code of the process.
  """
  lockSession(id: Int!): Int!
  """
  Deactivates the screen lock on a session. Returns the exit code of the process.
  """
  unlockSession(id: Int!): Int!
  """
  Terminates all sessions of a user. This kills all processes of all sessions of the user and deallocates all runtime resources attached to the user. Returns the exit code of the process.
  """
  terminateUser(uid: Int!): Int!
}

"""
A systemd Unit type.
"""
type Unit {
  """
  Unique name of the unit.
  """
  name: String!
  """
  Type of the unit.
  """
  type: UnitType!
  """
  The status of the unit.
  """
  status: UnitStatus!
  """
  Time it took to initialize this unit (milliseconds).
  """
  timeToInitialize: Int!
}

"""
The status of a systemd Unit type.
"""
type UnitStatus {
  """
  Exit code of the process.
  """
  statusCode: Int!
  """
  Unit's current load state.
  """
  loadState: String
  """
  Unit's current active state.
  """
  activeState: String
  """
  Main process ID for the unit.
  """
  mainPid: Int
}
